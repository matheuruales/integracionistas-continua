name: CI (Jest)
# 🚀 Integración Continua con Jest + TypeScript + Vite + ESLint

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:
    # Permite ejecutarlo manualmente desde la pestaña "Actions"

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true
  # 🧠 Evita ejecuciones duplicadas en la misma rama

jobs:
  build-and-test:
    name: 🔨 Build & 🧪 Test (Node ${{ matrix.node-version }})
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [20.x, 22.x]
    env:
      CI: true

    steps:
      # 📥 Clona el repositorio
      - name: 📥 Checkout repository
        uses: actions/checkout@v4

      # ⚙️ Configura Node.js (con cache de dependencias)
      - name: 🧰 Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: npm
          cache-dependency-path: package-lock.json

      # 📦 Instala dependencias (usa package-lock para instalación reproducible)
      - name: 📦 Install dependencies (npm ci)
        run: npm ci

      # 🔍 Verificación de tipos con TypeScript
      - name: 🧠 Type check (TS)
        run: npm run type-check

      # 🧹 Linter con tolerancia temporal (no cancela el flujo si hay errores)
      - name: 🔍 Lint (ESLint)
        run: |
          npm run lint || echo "⚠️ Lint terminó con advertencias o errores, continuando con el flujo..."

      # 🧪 Ejecución de pruebas con Jest
      - name: 🧪 Run tests (Jest)
        run: npm run test -- --ci

      # 🏗️ Construcción del proyecto con Vite
      - name: 🏗️ Build (Vite)
        run: npm run build

      # 📤 Carga del artefacto (solo si todo fue exitoso)
      - name: 📤 Upload production build (artifact)
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: dist-node-${{ matrix.node-version }}
          path: dist